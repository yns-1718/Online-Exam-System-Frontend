{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youness\\\\Dropbox\\\\My PC (DESKTOP-JVJNKK5)\\\\Desktop\\\\Exam system\\\\online exam system frontend\\\\src\\\\Components\\\\StudentComponent\\\\StudentDashboard\\\\TestComponent\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport style from \"../StudentDashboard.module.css\";\nimport baseUrl from \"../../../baseUrl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let {\n    category\n  } = useParams();\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  useEffect(() => {\n    async function getAllQuestions() {\n      let value = await axios.get(`${baseUrl}/exam/${id}/question`);\n      setAllQuestions(value.data);\n    }\n\n    getAllQuestions();\n  }, [id]);\n\n  function onOptionChange(questionId, selectedOption) {\n    setAnswers(prevAnswers => ({ ...prevAnswers,\n      [questionId]: selectedOption\n    }));\n  }\n\n  async function submitTest() {\n    const correctAnswers = allQuestions.reduce((acc, question) => {\n      acc[question.id] = question.answer;\n      return acc;\n    }, {});\n    const score = Object.keys(correctAnswers).reduce((totalScore, questionId) => {\n      if (correctAnswers[questionId] === answers[questionId]) {\n        return totalScore + 1;\n      }\n\n      return totalScore;\n    }, 0);\n    const status = score >= 3 ? \"Pass\" : \"Fail\";\n    const date = new Date();\n    const formattedDate = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\n    const formattedTime = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n    const resultData = {\n      status: status,\n      score: score,\n      email: {\n        email: sessionStorage.getItem(\"user\")\n      },\n      edate: `${formattedDate} ${formattedTime}`,\n      sname: {\n        name: category\n      },\n      totalMarks: \"5\",\n      examId: {\n        id: id\n      },\n      totalQuestion: \"5\"\n    };\n    await axios.post(`${baseUrl}/result`, resultData);\n    history.push(\"/StudentDashboard/Result\");\n  }\n\n  let history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${style.displayBoxQuestionHeadingBox}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-md-8 text-center ${style.centerTitle}`,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Answer all the questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), allQuestions.map((data, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${style.displayBoxQuestionBox}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-md-12 ${style.divQuestion}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: data.qname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-md-12 ${style.optionsContainer}`,\n          children: data.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.option,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `question_${data.id}_option_${index}`,\n              name: `question_${data.id}`,\n              value: option,\n              checked: answers[data.id] === option,\n              onChange: () => onOptionChange(data.id, option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `question_${data.id}_option_${index}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${style.submitExam}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-md-8 text-center`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-primary ${style.button}`,\n            onClick: submitTest,\n            children: \"Submit Exam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Test, \"MynZBikZfXJMeCZEel+b0rts9qw=\", false, function () {\n  return [useParams, useParams, useHistory];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/youness/Dropbox/My PC (DESKTOP-JVJNKK5)/Desktop/Exam system/online exam system frontend/src/Components/StudentComponent/StudentDashboard/TestComponent/Test.js"],"names":["axios","React","useState","useEffect","useHistory","useParams","style","baseUrl","Test","id","category","allQuestions","setAllQuestions","answers","setAnswers","getAllQuestions","value","get","data","onOptionChange","questionId","selectedOption","prevAnswers","submitTest","correctAnswers","reduce","acc","question","answer","score","Object","keys","totalScore","status","date","Date","formattedDate","getDate","getMonth","getFullYear","formattedTime","getHours","getMinutes","getSeconds","resultData","email","sessionStorage","getItem","edate","sname","name","totalMarks","examId","totalQuestion","post","history","push","displayBoxQuestionHeadingBox","centerTitle","map","i","displayBoxQuestionBox","divQuestion","qname","optionsContainer","options","option","index","submitExam","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,MAAI;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAtB;AACA,MAAI;AAAEK,IAAAA;AAAF,MAAeL,SAAS,EAA5B;AAEA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,eAAf,GAAiC;AAC/B,UAAIC,KAAK,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEV,OAAQ,SAAQE,EAAG,WAAhC,CAAlB;AACAG,MAAAA,eAAe,CAACI,KAAK,CAACE,IAAP,CAAf;AACD;;AACDH,IAAAA,eAAe;AAChB,GANQ,EAMN,CAACN,EAAD,CANM,CAAT;;AAQA,WAASU,cAAT,CAAwBC,UAAxB,EAAoCC,cAApC,EAAoD;AAClDP,IAAAA,UAAU,CAAEQ,WAAD,KAAkB,EAC3B,GAAGA,WADwB;AAE3B,OAACF,UAAD,GAAcC;AAFa,KAAlB,CAAD,CAAV;AAID;;AAED,iBAAeE,UAAf,GAA4B;AAC1B,UAAMC,cAAc,GAAGb,YAAY,CAACc,MAAb,CAAoB,CAACC,GAAD,EAAMC,QAAN,KAAmB;AAC5DD,MAAAA,GAAG,CAACC,QAAQ,CAAClB,EAAV,CAAH,GAAmBkB,QAAQ,CAACC,MAA5B;AACA,aAAOF,GAAP;AACD,KAHsB,EAGpB,EAHoB,CAAvB;AAKA,UAAMG,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYP,cAAZ,EAA4BC,MAA5B,CAAmC,CAACO,UAAD,EAAaZ,UAAb,KAA4B;AAC3E,UAAII,cAAc,CAACJ,UAAD,CAAd,KAA+BP,OAAO,CAACO,UAAD,CAA1C,EAAwD;AACtD,eAAOY,UAAU,GAAG,CAApB;AACD;;AACD,aAAOA,UAAP;AACD,KALa,EAKX,CALW,CAAd;AAOA,UAAMC,MAAM,GAAGJ,KAAK,IAAI,CAAT,GAAa,MAAb,GAAsB,MAArC;AAEA,UAAMK,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,aAAa,GAAI,GAAEF,IAAI,CAACG,OAAL,EAAe,IAAGH,IAAI,CAACI,QAAL,KAAkB,CAAE,IAAGJ,IAAI,CAACK,WAAL,EAAmB,EAArF;AACA,UAAMC,aAAa,GAAI,GAAEN,IAAI,CAACO,QAAL,EAAgB,IAAGP,IAAI,CAACQ,UAAL,EAAkB,IAAGR,IAAI,CAACS,UAAL,EAAkB,EAAnF;AAEA,UAAMC,UAAU,GAAG;AACjBX,MAAAA,MAAM,EAAEA,MADS;AAEjBJ,MAAAA,KAAK,EAAEA,KAFU;AAGjBgB,MAAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAEC,cAAc,CAACC,OAAf,CAAuB,MAAvB;AAAT,OAHU;AAIjBC,MAAAA,KAAK,EAAG,GAAEZ,aAAc,IAAGI,aAAc,EAJxB;AAKjBS,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAExC;AAAR,OALU;AAMjByC,MAAAA,UAAU,EAAE,GANK;AAOjBC,MAAAA,MAAM,EAAE;AAAE3C,QAAAA,EAAE,EAAEA;AAAN,OAPS;AAQjB4C,MAAAA,aAAa,EAAE;AARE,KAAnB;AAWA,UAAMrD,KAAK,CAACsD,IAAN,CAAY,GAAE/C,OAAQ,SAAtB,EAAgCqC,UAAhC,CAAN;AACAW,IAAAA,OAAO,CAACC,IAAR,CAAa,0BAAb;AACD;;AAED,MAAID,OAAO,GAAGnD,UAAU,EAAxB;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,aAAYE,KAAK,CAACmD,4BAA6B,EAAhE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAG,wBAAuBnD,KAAK,CAACoD,WAAY,EAA1D;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAQG/C,YAAY,CAACgD,GAAb,CAAiB,CAACzC,IAAD,EAAO0C,CAAP,kBAChB;AAAK,MAAA,SAAS,EAAG,aAAYtD,KAAK,CAACuD,qBAAsB,EAAzD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAG,aAAYvD,KAAK,CAACwD,WAAY,EAA/C;AAAA,iCACE;AAAA,sBAAO5C,IAAI,CAAC6C;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAG,aAAYzD,KAAK,CAAC0D,gBAAiB,EAApD;AAAA,oBACG9C,IAAI,CAAC+C,OAAL,CAAaN,GAAb,CAAiB,CAACO,MAAD,EAASC,KAAT,kBAChB;AAAK,YAAA,SAAS,EAAE7D,KAAK,CAAC4D,MAAtB;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,EAAE,EAAG,YAAWhD,IAAI,CAACT,EAAG,WAAU0D,KAAM,EAF1C;AAGE,cAAA,IAAI,EAAG,YAAWjD,IAAI,CAACT,EAAG,EAH5B;AAIE,cAAA,KAAK,EAAEyD,MAJT;AAKE,cAAA,OAAO,EAAErD,OAAO,CAACK,IAAI,CAACT,EAAN,CAAP,KAAqByD,MALhC;AAME,cAAA,QAAQ,EAAE,MAAM/C,cAAc,CAACD,IAAI,CAACT,EAAN,EAAUyD,MAAV;AANhC;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAO,cAAA,OAAO,EAAG,YAAWhD,IAAI,CAACT,EAAG,WAAU0D,KAAM,EAApD;AAAA,wBAAwDD;AAAxD;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA,aAAmCC,KAAnC;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,OAAiEP,CAAjE;AAAA;AAAA;AAAA;AAAA,YADD,CARH,eAkCE;AAAK,MAAA,SAAS,EAAG,aAAYtD,KAAK,CAAC8D,UAAW,EAA9C;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAG,sBAAjB;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAG,mBAAkB9D,KAAK,CAAC+D,MAAO,EAAnD;AAAsD,YAAA,OAAO,EAAE9C,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA,kBADF;AA8CD;;GAxGQf,I;UACMH,S,EACMA,S,EAsDLD,U;;;KAxDPI,I;AA0GT,eAAeA,IAAf","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport style from \"../StudentDashboard.module.css\";\r\nimport baseUrl from \"../../../baseUrl\";\r\n\r\nfunction Test() {\r\n  let { id } = useParams();\r\n  let { category } = useParams();\r\n\r\n  const [allQuestions, setAllQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function getAllQuestions() {\r\n      let value = await axios.get(`${baseUrl}/exam/${id}/question`);\r\n      setAllQuestions(value.data);\r\n    }\r\n    getAllQuestions();\r\n  }, [id]);\r\n\r\n  function onOptionChange(questionId, selectedOption) {\r\n    setAnswers((prevAnswers) => ({\r\n      ...prevAnswers,\r\n      [questionId]: selectedOption,\r\n    }));\r\n  }\r\n\r\n  async function submitTest() {\r\n    const correctAnswers = allQuestions.reduce((acc, question) => {\r\n      acc[question.id] = question.answer;\r\n      return acc;\r\n    }, {});\r\n\r\n    const score = Object.keys(correctAnswers).reduce((totalScore, questionId) => {\r\n      if (correctAnswers[questionId] === answers[questionId]) {\r\n        return totalScore + 1;\r\n      }\r\n      return totalScore;\r\n    }, 0);\r\n\r\n    const status = score >= 3 ? \"Pass\" : \"Fail\";\r\n\r\n    const date = new Date();\r\n    const formattedDate = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\r\n    const formattedTime = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n\r\n    const resultData = {\r\n      status: status,\r\n      score: score,\r\n      email: { email: sessionStorage.getItem(\"user\") },\r\n      edate: `${formattedDate} ${formattedTime}`,\r\n      sname: { name: category },\r\n      totalMarks: \"5\",\r\n      examId: { id: id },\r\n      totalQuestion: \"5\",\r\n    };\r\n\r\n    await axios.post(`${baseUrl}/result`, resultData);\r\n    history.push(\"/StudentDashboard/Result\");\r\n  }\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div className={`container ${style.displayBoxQuestionHeadingBox}`}>\r\n        <div className=\"row justify-content-center\">\r\n          <div className={`col-md-8 text-center ${style.centerTitle}`}>\r\n            <h1>Answer all the questions</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {allQuestions.map((data, i) => (\r\n        <div className={`container ${style.displayBoxQuestionBox}`} key={i}>\r\n          <div className=\"row\">\r\n            <div className={`col-md-12 ${style.divQuestion}`}>\r\n              <span>{data.qname}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className={`col-md-12 ${style.optionsContainer}`}>\r\n              {data.options.map((option, index) => (\r\n                <div className={style.option} key={index}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id={`question_${data.id}_option_${index}`}\r\n                    name={`question_${data.id}`}\r\n                    value={option}\r\n                    checked={answers[data.id] === option}\r\n                    onChange={() => onOptionChange(data.id, option)}\r\n                  />\r\n                  <label htmlFor={`question_${data.id}_option_${index}`}>{option}</label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className={`container ${style.submitExam}`}>\r\n        <div className=\"row justify-content-center\">\r\n          <div className={`col-md-8 text-center`}>\r\n            <button className={`btn btn-primary ${style.button}`} onClick={submitTest}>\r\n              Submit Exam\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}